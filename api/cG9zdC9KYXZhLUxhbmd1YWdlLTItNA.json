{"title":"Java数组(3.9)","date":"2019-01-13T03:30:23.000Z","thumbnail":"https://i.loli.net/2019/01/13/5c3ab12a2922b.png","slug":"Java-Language-2-4","tags":["Java学习","Java语言"],"categories":["Java"],"updated":"2019-01-19T08:37:34.750Z","content":"<p>&ensp;<br>&ensp;</p>\n<center><font color=\"#3CB371\" face=\"Comic sans MS\" size=\"5\"><strong>数组</strong></font></center>\n\n<p>&emsp;<br>&emsp;</p>\n<h3 id=\"一、-一维数组\"><a href=\"#一、-一维数组\" class=\"headerlink\" title=\"一、 一维数组 \"></a><font color=\"#FF6347\" face=\"Comic sans MS\">一、 一维数组 </font></h3><font face=\"Comic sans MS\"><font color=\"red\"> <strong>数组：</strong> </font><font color=\"#00B2EE\"><strong>相同类型的数据元素按顺序组成的一种线性表</strong></font>，元素在数组中的相对位置由下标来指定。数组中的每个元素通过数组名加下标进行引用。<br><br><font color=\"red\"> <strong>数组有什么用处？</strong> </font><br><font color=\"#009ACD\"><em>例：定义100个int型变量，求这100个变量的和。</em></font><br>int x1,x2,x3…x100;<br>int sum;<br>sum=x1+x2+…+x100;<br>这样程序很复杂。<br><font color=\"#009ACD\"><em>例：定义100个int型变量，求这100个变量的和。</em></font><br>有了数组后，可以这样编程：<br>int [] x=new int[100];<br>int sum=0;<br>for(int i=0;i&lt;100;i++)<br>{<br>     sum=sum+x[i];<br>}<br>这样使得程序编写方便很多。<br><br><font color=\"red\"> <strong>注意：</strong> </font><br>Java中，数组是独立的<font color=\"#00B2EE\"><strong>类</strong></font>，有自身的方法，<font color=\"#00B2EE\"><strong>不只是变量的集合</strong></font>。在Java里创建一个数组，需要做如下的工作：<br>   （1）说明一个变量来存放该数组。<br>   （2）<font color=\"#00B2EE\"><strong>建立一个新的数组对象</strong></font>（即创建数组空间）并把它赋给这个数组变量。<br>   （3）在该数组中存储信息。<br></font>\n\n<p>&emsp;&emsp;<font color=\"red\"> <strong>↓↓</strong> </font></p>\n<blockquote>\n<p>例如：String list[ ]=new String[3];<br>             list[0]=“one”;<br>             list[1]=“two”;</p>\n</blockquote>\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"1-1-一维数组的说明\"><a href=\"#1-1-一维数组的说明\" class=\"headerlink\" title=\"1.1  一维数组的说明\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">1.1  一维数组的说明</font></h4><font face=\"Comic sans MS\">同其他类变量一样，在使用数组前必须先说明它，一维数组说明的格式如下：<br><font color=\"red\">&emsp;       类型    数组名[ ]；<br>    或 类型[ ]    数组名；<br></font></font>\n\n<blockquote>\n<p>例如：int list[ ];<br>            int[] list;<br>            String[] args;<br>            String args[];</p>\n</blockquote>\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"1-2-创建数组空间\"><a href=\"#1-2-创建数组空间\" class=\"headerlink\" title=\"1.2  创建数组空间\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">1.2  创建数组空间</font></h4><font face=\"Comic sans MS\">创建数组空间必须声明数组的长度，以确定所开辟的内存空间的大小，在Java中实际上就是通过new创建一个新的数组对象并把它赋给这个数组变量。其语法格式如下：<br><font color=\"red\">&emsp;&emsp;&emsp;数组名=new 数组元素类型[数组元素个数]</font><br>例如：int[] list;   list=new int[3];<br><br>数组的说明和构造合并在一起，其语法格式如下：<br><font color=\"red\">&emsp;&emsp;&emsp;          类型 数组名[ ]=new 数组元素类型[数组元素个数]；]</font><br>例如：int list[ ]=new int[3];<br></font>\n\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"1-3-数组的初始化\"><a href=\"#1-3-数组的初始化\" class=\"headerlink\" title=\"1.3  数组的初始化\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">1.3  数组的初始化</font></h4><font face=\"Comic sans MS\"><font color=\"red\"><strong>1. 数组的初始化方式有两种：</strong></font><br>(1) 像初始化简单类型一样自动初始化数组，即在说明数组的同时进行初始化；<br>&emsp;&emsp;<font color=\"red\">     int a[]={1,2,3,4}</font><br>(2) 先定义数组，然后为每个元素赋值。例如：<br>&emsp;&emsp;<font color=\"red\">     int b[]=new int[3];</font><br>&emsp;&emsp;<font color=\"red\">     b[0]=8;b[1]=9;</font><br>&emsp;<br><font color=\"red\"><strong>2. 这样初始化也可以!</strong></font><br>另一种形式1：<br><font color=\"red\">int[] a=new int[]{1,2,3,4};</font>&emsp;&emsp; 等价于: int[] a={1,2,3,4}<br>{}中的元素个数决定了[]中的元素个数。{}中的元素取值决定了数组a各个元素的取值。<br><br>另一种形式2：<br><font color=\"red\">int[] a;<br>a=new int[]{1,2,3,4};</font><br>等价于：int[] a=new int[3];<br>&emsp;&emsp;&emsp;&emsp; a[0]=1;a[1]=2;a[2]=3;<br>&emsp;&emsp;&emsp;&emsp; a[3]=4<br></font>\n\n<blockquote>\n<p>但是这样定义是错误的：<br>int[] a;<br>a={1,2,3,4};</p>\n</blockquote>\n<font face=\"Comic sans MS\"><font color=\"red\"><strong>定义数组要注意：</strong></font><br>(1) 不能这样定义数组：<br>&emsp;&emsp;&emsp;&emsp;          int a[5];<br>(2)不能这样初始化数组：<br>&emsp;&emsp;&emsp;&emsp;          int[] a;   a={1,2,3,4};<br>(3)使用new 创建数组之后，数组中的每个元素被自动初始化为0。<br>&emsp;&emsp;&emsp;&emsp;         int [] a=new int[10];<br>&emsp;&emsp;&emsp;&emsp;         for(int i=0;i&lt;10;i++)<br>&emsp;&emsp;&emsp;&emsp;           { System.out.println(“a[“+i+”]=”+a[i]);<br>&emsp;&emsp;&emsp;&emsp;           }<br></font>\n\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"1-4-数组元素的使用\"><a href=\"#1-4-数组元素的使用\" class=\"headerlink\" title=\"1.4  数组元素的使用\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">1.4  数组元素的使用</font></h4><font face=\"Comic sans MS\">数组元素的表示方式为：<br>&emsp;&emsp;&emsp;&emsp; <font color=\"red\">数组名[下标]</font><br>&emsp;<br><font color=\"red\"><strong>使用数组时要注意：</strong></font><br>（1）数组越界异常:<font color=\"#00B2EE\"><strong>Java在对数组元素操作时会对数组下标进行越界检查，以保证安全性。</strong></font>若在Java程序中超出了对数组下标的使用范围则在运行此程序时将出现如下错误信息：<br>&emsp;&emsp;    <em>Exception in thread “main”             Java.lang.ArrayIndexOutOfBoundsException</em><br>如下的错误即数组越界：int x[]={1,2,3,4};System.out.println(x[4]);<br><br>（2）每个数组都有一个属性length来指明其长度，字符串String用length()。<br>&emsp;&emsp;<font color=\"red\">         <strong>list.length;</strong></font>\n\n<p>（3）空指针异常<br></p></font><p></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组长度lengh的使用</span><br><span class=\"line\"><span class=\"keyword\">int</span> x[]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;                  <span class=\"keyword\">int</span> x[]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)              <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;x.length;i++)    </span><br><span class=\"line\">&#123;  System.out.println(x[i]);        &#123; System.out.println(x[i]); </span><br><span class=\"line\">&#125;                                   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">空指针如下使用会导致错误</span><br><span class=\"line\"><span class=\"keyword\">int</span> x[]=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">x=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">x[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"1-5-一维数组使用举例\"><a href=\"#1-5-一维数组使用举例\" class=\"headerlink\" title=\"1.5  一维数组使用举例\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">1.5  一维数组使用举例</font></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[例3-12] 练习数组的创建和使用</span><br><span class=\"line\">[例3-13] 练习数组越界</span><br><span class=\"line\">[例3-14] 数组作为函数的参数</span><br><span class=\"line\"></span><br><span class=\"line\">[例3-12] HalfDollars.java 练习数组的创建与使用</span><br><span class=\"line\">class HalfDollars&#123;</span><br><span class=\"line\">\tpublic static void main(String[] args)&#123;</span><br><span class=\"line\">\t\tint[] denver=&#123;15000006,18810000,20752110&#125;;</span><br><span class=\"line\">\t\tint[] philadelphia=new int[denver.length];</span><br><span class=\"line\">\t\tint[] total=new int[denver.length];</span><br><span class=\"line\">\t\tint average;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tphiladelphia[0]=15020000;</span><br><span class=\"line\">\t\tphiladelphia[1]=18709000;</span><br><span class=\"line\">\t\tphiladelphia[2]=21348000;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\ttotal[0]=denver[0]+philadelphia[0];</span><br><span class=\"line\">\t\ttotal[1]=denver[1]+philadelphia[1];</span><br><span class=\"line\">\t\ttotal[2]=denver[2]+philadelphia[2];</span><br><span class=\"line\">\t\taverage=(total[0]+total[1]+total[2])/3;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"1993 production:\"</span>+total[0]);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"1994 production:\"</span>+total[1]);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"1995 production:\"</span>+total[2]);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Average production:\"</span>+average);</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">1993 production:30020006</span><br><span class=\"line\">1994 production:37519000</span><br><span class=\"line\">1995 production:42100110</span><br><span class=\"line\">Average production:36546372</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[例3-13] ChoiceSort.java 数组的越界</span><br><span class=\"line\">public class ChoiceSort</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpublic static void main(String arg[])</span><br><span class=\"line\">     &#123;   int i,min;</span><br><span class=\"line\">          int str[]=&#123;2,13,41,58,32&#125;;</span><br><span class=\"line\">          <span class=\"keyword\">for</span>(i=0;i&lt;5;i++)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">\t         min=i;</span><br><span class=\"line\">\t        <span class=\"keyword\">for</span>(int j=i+1;j&lt;6;j++)</span><br><span class=\"line\">\t         &#123;      </span><br><span class=\"line\">\t           <span class=\"keyword\">if</span>(str[min]&gt;str[j])</span><br><span class=\"line\">\t         \t &#123;</span><br><span class=\"line\">\t              int at=str[j];</span><br><span class=\"line\">\t              str[j]=str[min];</span><br><span class=\"line\">\t              str[min]=at;</span><br><span class=\"line\">\t             &#125;</span><br><span class=\"line\">\t         &#125;  </span><br><span class=\"line\">\t      &#125;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=0;i&lt;5;i++)</span><br><span class=\"line\">\t    System.out.println(str[i]+<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">程序没能正常运行，抛出了“java.lang.ArrayIndexOutOfBoundsException”异常。 </span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">例[3-14] test.java 数组作为函数的参数</span><br><span class=\"line\">class <span class=\"built_in\">test</span>  </span><br><span class=\"line\">&#123;   static void change(int [] a)  //输出a[0]和a[1]中大的那个数</span><br><span class=\"line\">    &#123;    int t;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(a[0]&lt;a[1])</span><br><span class=\"line\">         &#123;        t=a[0];</span><br><span class=\"line\">                  a[0]=a[1];</span><br><span class=\"line\">                  a[1]=t;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         System.out.println(a[0]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static void main(String args[])</span><br><span class=\"line\">   &#123;    int x[]=&#123;5,12&#125;;</span><br><span class=\"line\">        change(x);     //调用过后，数组x可能发生变化</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<hr>\n<p>&emsp;<br>&emsp;</p>\n<h3 id=\"二、-二维数组\"><a href=\"#二、-二维数组\" class=\"headerlink\" title=\"二、 二维数组 \"></a><font color=\"#FF6347\" face=\"Comic sans MS\">二、 二维数组 </font></h3><font face=\"Comic sans MS\">Java中的多维数组实际上是数组的数组。不一定是规则的矩阵数组。<br><font color=\"red\">多维数组：数组的数组，例如，二维数组为一个特殊的一维数组，其每个元素又是一个一维数组<br></font></font>\n\n<p><img src=\"https://i.loli.net/2019/01/13/5c3ad27f549bb.png\" alt=\"1.png\"><img src=\"https://i.loli.net/2019/01/13/5c3ad282ed579.png\" alt=\"2.png\"></p>\n<p>&emsp;<br>&emsp;</p>\n<font face=\"Comic sans MS\"><font color=\"#00B2EE\"><strong>二维数组说明的格式为：</strong></font><br><font color=\"red\">&emsp;  类型    数组名[ ][ ]；<br>      或                  类型[ ][ ]     数组名；<br></font><br>例如，说明一个整型的二维数组如下：<br><font color=\"red\">&emsp;    int intArray[ ][ ];或 int[ ][ ] intArray;<br></font>\n\n<p>&emsp;</p>\n<font color=\"#00B2EE\"><strong>二维数组的创建：</strong></font><br>直接为每一维分配空间，如：<br><font color=\"red\">&emsp;       int a[ ][ ]=new int[2][3];</font><br></font>\n\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n\n<tbody>\n<tr>\n<td style=\"text-align:center\">a[0][0]</td>\n<td style=\"text-align:center\">a[0][1]</td>\n<td style=\"text-align:center\">a[0][2]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a[1][0]</td>\n<td style=\"text-align:center\">a[1][1]</td>\n<td style=\"text-align:center\">a[1][2]</td>\n</tr>\n</tbody>\n</table></div></div>\n<p>&emsp;</p>\n<font face=\"Comic sans MS\"><font color=\"#00B2EE\"><strong>从最高维开始，分别为每一维分配空间，如：</strong></font><br>int b[ ][ ]=new int[2][ ];<br>b[0]=new int[3];<br>b[1]=new int[5];<br></font>\n\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n\n<tbody>\n<tr>\n<td style=\"text-align:center\">b[0][0]</td>\n<td style=\"text-align:center\">b[0][1]</td>\n<td style=\"text-align:center\">b[0][2]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">b[1][0]</td>\n<td style=\"text-align:center\">b[1][1]</td>\n<td style=\"text-align:center\">b[1][2]</td>\n<td>b[1][3]</td>\n<td>b[1][4]</td>\n</tr>\n</tbody>\n</table></div></div>\n<p>&emsp;</p>\n<font face=\"Comic sans MS\"><font color=\"#00B2EE\"><strong>元素的初始化：</strong></font><br>（1）直接对每个元素进行赋值。<br>（2）在说明数组的同时进行初始化。<br></font>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：  int[][] a=new int[3][2]：</span><br><span class=\"line\">              a[0][0]=2； a[0][1]=3</span><br><span class=\"line\">              a[1][0]=1； a[1][1]=5</span><br><span class=\"line\">              a[2][0]=3； a[2][1]=4  </span><br><span class=\"line\">等价于：int a[ ][ ]=&#123;&#123;2,3&#125;,&#123;1,5&#125;,&#123;3,4&#125;&#125;;</span><br></pre></td></tr></table></figure>\n<p>&emsp;</p>\n<font face=\"Comic sans MS\"><font color=\"red\"><strong>总结：与数组操作相关的系统函数</strong></font><br><font color=\"#00B2EE\"><strong>（1）使用Arrays.sort来对数组排序</strong></font><br>int x[]=new int[]{3,2,1,4};<br>java.util.Arrays.sort(x);  //对数组x内的元素进行排序（升序）<br>for(int i=0;i &lt; x.length;i++)<br>{<br>      System.out.println(x[i]);<br>}<br><br><font color=\"#00B2EE\"><strong>（2）使用Arrays.binarySearch函数对数组进行二分查找</strong></font><br>int [] x=new int[]{2,5,1,6,8,3};<br>java.util.Arrays.sort(x);<br>System.out.println(java.util.Arrays.binarySearch(x,1));   //二分查找，在数组x中查找1，输出0 ;如果没找到，则会输出一个&lt;0的数<br><br><font color=\"#00B2EE\"><strong>（3）使用System.arraycopy函数拷贝数组</strong></font><br>int [] x;<br>x=new int[]{3,1,2,4};<br>int [] y;<br>y=new int[4];<br>System.arraycopy(x,0,y,0,4);<br>//将数组x内的 4个元素拷贝给数组y<br><br><font color=\"#00B2EE\"><strong>（4）使用Ayyars.fill函数填充数组</strong></font><br>int [] x;<br>x=new int[]{3,1,2,4};<br>java.util.Arrays.fill(x,7);    //数组x中的4个元素都改为7<br></font>\n\n<hr>\n<hr>\n<p>&emsp;<br>&emsp;<br>&emsp;<br>&emsp;</p>\n","prev":{"title":"Wireshark简单介绍和数据包分析","slug":"Wireshark-1"},"next":{"title":"Java简单语句、复合语句、控制语句(3.7-3.8)","slug":"Java-Language-2-3"},"link":"Treecatee.gitgub.io/post/Java-Language-2-4/","toc":[{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">一、 一维数组 </font>","id":"一、-一维数组","index":"1","children":[{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">1.1  一维数组的说明</font>","id":"1-1-一维数组的说明","index":"1.1"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">1.2  创建数组空间</font>","id":"1-2-创建数组空间","index":"1.2"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">1.3  数组的初始化</font>","id":"1-3-数组的初始化","index":"1.3"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">1.4  数组元素的使用</font>","id":"1-4-数组元素的使用","index":"1.4"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">1.5  一维数组使用举例</font>","id":"1-5-一维数组使用举例","index":"1.5"}]},{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">二、 二维数组 </font>","id":"二、-二维数组","index":"2"}],"copyright":{"author":"Treecatee","license":"不可转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"Treecatee.gitgub.io/post/Java-Language-2-4/\" title=\"Java数组(3.9)\">Treecatee.gitgub.io/post/Java-Language-2-4/</a>","published":"January 13, 2019"}}