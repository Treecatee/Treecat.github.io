{"title":"Java语言基础的字符常变量等(3.1-3.3)","date":"2018-12-20T08:48:59.000Z","thumbnail":"https://i.loli.net/2018/12/24/5c20d0d7b3249.jpg","slug":"Java-Language-2-1","comments":true,"tags":["Java学习","Java语言"],"categories":["Java"],"updated":"2019-01-19T08:37:17.099Z","content":"<p>&ensp;<br>&ensp;</p>\n<p><center><font color=\"#3CB371\" face=\"Comic sans MS\" size=\"5\"><strong>标识符,注释和分隔符、变量和常量、基本类型</strong></font></center><br>&ensp;<br>&ensp;</p>\n<h4 id=\"一、-标识符、注释和分隔符\"><font color=\"#FF6347\" face=\"Comic sans MS\">一、 标识符、注释和分隔符</font><a href=\"post/Java-Language-2-1#一、-标识符、注释和分隔符\"></a></h4><p><font color=\"red\" face=\"Arial\">📒标识符：</font><font face=\"Arial\">是程序员用来标记语言中元素（变量、常量、类、对象等）名称的命名记号。</font></p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#B0E0E6\">Java中的标识符遵守先定义后使用的原则。即只有定义了的标识符，才可在语句部分使用。</td></tr></table></div></div>\n\n<p><font color=\"#EE7942\" face=\"Arial\"><strong>Java定义标识符的规则：</strong></font><br>(1)由字母、 数字、下划线、$组成，不能由数字开头<br>(2)不能是Java中的保留字(关键字)；<br>(3)大小写敏感，长度无限制。</p>\n<p>&emsp;</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>保留字  </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">类型保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> boolean, byte, char, short,  int, long,float, double, void</font></td>\n</tr>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">语句保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> if, else, switch, case, default, break, for, while, do,return,continue,try,catch,finally,throw,synchronized</font></td>\n</tr>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">表达式保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> new, null, this, super</font></td>\n</tr>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">修饰符保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> abstract, final, public, private, protected, static, transient, volatile </font></td>\n</tr>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">类、方法保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> class, throws, native, instanceof</font></td>\n</tr>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">扩展类构筑模块保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> package, import, extends, implements, interface<font face=\"Comic sans MS\" color=\"#EE3A8C\"> </font></font></td>\n</tr>\n<tr>\n<td><font color=\"#EE3A8C\" face=\"Arial\">其它保留字</font></td>\n<td><font face=\"Comic sans MS\" color=\"#EE3A8C\"> cast, futuer, generic, inner, oprater, outer, rest,var<font face=\"Comic sans MS\"> </font></font></td>\n</tr>\n</tbody>\n</table></div></div>\n<p>&emsp;<br>&emsp;</p>\n<h5 id=\"1-1-标识符\"><font color=\"#3CB371\" face=\"Comic sans MS\">1.1  标识符</font><a href=\"post/Java-Language-2-1#1-1-标识符\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font color face=\"Comic sans MS\"><strong>举例</strong>：<br>合法标识符：     A , a1,  $Systembol,  square,  ex_sa<br>不合法标识符：          1a          （以数字1开头）<br>                       break       （禁止使用保留字）<br>                       TWO  WORDS  （含有空格）<br>                       .NO         （有圆点）<br></font></td></tr></table></div></div>\n\n\n<p>&emsp;</p>\n<h5 id=\"1-2-注释\"><font color=\"#3CB371\" face=\"Comic sans MS\">1.2  注释</font><a href=\"post/Java-Language-2-1#1-2-注释\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>Java有三种注释形式：</strong><br>      1.“//” 单行注释。表示从此向后，直到行尾都是注释。<br>      2.“/*……*/“ 块注释。在“/*”和“*/”之间都是注释。<br>      3.“/**……*/”文档注释。所有在“/**”和“*/”之间的内容可以用来自动形成文档。</font></td></tr></table></div></div>\n\n\n<p>&emsp;</p>\n<h5 id=\"1-3-语句\"><font color=\"#3CB371\" face=\"Comic sans MS\">1.3  语句</font><a href=\"post/Java-Language-2-1#1-3-语句\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\">与C++一样，Java中的语句也是最小的执行单位。<br>&emsp;&emsp;&emsp;&emsp;各个语句之间以  ;  间隔<br>&emsp;&emsp;&emsp;&emsp;X大括号{   }内的一系列语句称为语句块</font></td></tr></table></div></div>\n\n<hr>\n<hr>\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"二、-变量和常量\"><font color=\"#FF6347\" face=\"Comic sans MS\"> 二、 变量和常量</font><a href=\"post/Java-Language-2-1#二、-变量和常量\"></a></h4><h5 id=\"2-1-变量\"><font color=\"#3CB371\" face=\"Comic sans MS\">2.1  变量</font><a href=\"post/Java-Language-2-1#2-1-变量\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\">📒Java的变量有两种：<font color=\"red\"><strong>局部变量  类成员变量</strong></font><br>变量必须先定义后使用！变量的定义形式如下：<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<font color=\"red\">类型      变量名表；</font></font></td></tr></table></div></div>\n\n<blockquote>\n<p>注意：局部变量在使用前必须给定初值，否则，将编译出错，而类成员变量无此要求。</p>\n</blockquote>\n<p><font face=\"Comic sans MS\">如下出现编译错误，缺少“y=8;”</font></p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">class test<span class=\"token punctuation\">{</span>\n  int x<span class=\"token punctuation\">;</span>\n  void method<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      int y<span class=\"token punctuation\">;</span> \n      System.out.println<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n      System.out.println<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n  public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       <span class=\"token function\">test</span> t<span class=\"token operator\">=</span>new test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       t.method<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>&emsp;</p>\n<h6 id=\"2-1-1-变量名\"><font color=\"#3CB371\" face=\"Comic sans MS\">2.1.1  变量名 </font><a href=\"post/Java-Language-2-1#2-1-1-变量名\"></a></h6><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>1. 📒在Java中用标识符来表示变量名</strong>。<br>&emsp;&emsp;1.1 变量名中字母大写和小写是有区别的，如name和Name表示两个不同的变量名；<br>&emsp;&emsp;1.2 变量名标志存放变量值的内存位置，其内存存放的内容是变量的值。<br><strong>2. 📒命名方法</strong>:<br>2.1 程序员应该为变量取有意义的名称，以利于程序的阅读和理解；<br>2.2 习惯上，变量名以小写字母开头，若一个变量名由超过一个单词所组成，则第一个单词之后的所有单词都以大写字母开头，以便于理解该变量名。<br>&emsp;&emsp;例如，anIntVar<br></font></td></tr></table></div></div>\n\n<p>&emsp;</p>\n<h6 id=\"2-1-2-变量的类型\"><font color=\"#3CB371\" face=\"Comic sans MS\">2.1.2   变量的类型 </font><a href=\"post/Java-Language-2-1#2-1-2-变量的类型\"></a></h6><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>变量类型用于表述数据的格式和结构。</strong><br>📒<strong>Java中的数据类型可分为两大类：</strong><br><font color=\"red\"><strong>基本数据类型：</strong></font>整数类型、实数类型、字符型、布尔型<br><font color=\"red\"><strong>构造数据类型：</strong></font>Java 语言中构造类型用类来描述。<br></font></td></tr></table></div></div>\n\n<hr>\n<hr>\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"三、-基本数据类型表-变量和常量\"><font color=\"#FF6347\" face=\"Comic sans MS\"> 三、 基本数据类型表:变量和常量</font><a href=\"post/Java-Language-2-1#三、-基本数据类型表-变量和常量\"></a></h4><div class=\"article-img\"><p><img src=\"https://s1.ax1x.com/2018/12/20/Fr1nnP.png\" alt=\"1\" data-zoomable></p></div>\n<p>&emsp;</p>\n<h5 id=\"3-1-整型\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.1  整型</font><a href=\"post/Java-Language-2-1#3-1-整型\"></a></h5><div class=\"article-img\"><p><img src=\"https://s1.ax1x.com/2018/12/20/Fr10NF.png\" alt=\"2\" data-zoomable></p></div>\n<p>&emsp;</p>\n<h6 id=\"3-1-1-整型常量\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.1.1  整型常量</font><a href=\"post/Java-Language-2-1#3-1-1-整型常量\"></a></h6><div class=\"article-img\"><p><img src=\"https://s1.ax1x.com/2018/12/20/Fr1jUS.png\" alt=\"3\" data-zoomable></p></div>\n<p>&emsp;</p>\n<h6 id=\"3-1-2-整型变量\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.1.2  整型变量</font><a href=\"post/Java-Language-2-1#3-1-2-整型变量\"></a></h6><div class=\"article-img\"><p><img src=\"https://s1.ax1x.com/2018/12/20/Fr3S3j.png\" alt=\"4\" data-zoomable></p></div>\n<p>&emsp;</p>\n<h5 id=\"3-2-实型\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.2  实型</font><a href=\"post/Java-Language-2-1#3-2-实型\"></a></h5><div class=\"article-img\"><p><img src=\"https://s1.ax1x.com/2018/12/20/Fr3uvR.png\" alt=\"5\" data-zoomable></p></div>\n<p>&emsp;</p>\n<h6 id=\"3-2-1实型常量有两种表示法：\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.2.1实型常量有两种表示法：</font><a href=\"post/Java-Language-2-1#3-2-1实型常量有两种表示法：\"></a></h6><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>(1)十进制表示法</strong><br>&emsp;&emsp;-3.5f&emsp;0.0f&emsp;123.45f&emsp;+678.9f<br>      要注意,采用十进制表示法时,小数点的两侧都必须有数字, 缺一不可，如+123．和 .56都是不合法的。<br><strong>(2)科学表示法：</strong> <font face=\"Comic sans MS\" color=\"red\"><strong>&lt;尾数&gt; E &lt;阶码 &gt; </strong></font><br>&emsp;&emsp;-1.234567E+12&emsp;(-1.2345678901×1012)<br>&emsp;&emsp;尾数&emsp;阶码<br><strong>注意：</strong><font color=\"red\"><br>&emsp;&emsp;&emsp;&emsp;尾数必须有，但小数部分可无；<br>&emsp;&emsp;&emsp;&emsp;阶码必须有，必须是整数。<br>&emsp;&emsp;&emsp;&emsp;基数是10<br></font></font></td></tr></table></div></div><br><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>下列表示都是不正确的。</strong><br>&emsp;&emsp;E-6&emsp;&emsp;（缺尾数）<br>&emsp;&emsp;3E&emsp;&emsp;（无阶码）<br>&emsp;&emsp;2.E3&emsp;&emsp;（尾数出错）<br>&emsp;&emsp;2E1.2&emsp;&emsp;（阶码非整数）<br>&emsp;<br><strong>📒实型变量的定义</strong><br>例如：<br>float aFloatVar;<br>double aDoubleVar;<font><br></font></font></td></tr></table></div></div>\n\n<p>&emsp;</p>\n<h5 id=\"3-3-布尔型\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.3      布尔型</font><a href=\"post/Java-Language-2-1#3-3-布尔型\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>📒布尔数据类型用于表达逻辑状态：</strong><br>&emsp;&emsp;布尔型数据只有两个值：true和false。<br>&emsp;&emsp;<font face=\"Comic sans MS\" color=\"red\"><strong>注意: Java中不可将布尔类型看做整型值。true不对应1，false不对应0，不像C++一样。</strong></font></font></td></tr></table></div></div>\n\n<p>&emsp;</p>\n<h5 id=\"3-4-字符型\"><font color=\"#3CB371\" face=\"Comic sans MS\">3.4      字符型</font><a href=\"post/Java-Language-2-1#3-4-字符型\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#ADD8E6\"><font face=\"Comic sans MS\"><strong>📒字符类型用来表示单个字符，采用16位二进制Unicode 编码表示</strong><br>字符常量是用两个单引号括起来的一个字符<br>&emsp;&emsp;例如： ‘A’；  ‘a’； ‘2’； ‘我’；<br>也可用unicode代码表示一个字符常量<br>&emsp;&emsp;例如： ‘\\u0041’<br></font></td></tr></table></div></div>    \n\n<p>&emsp;<br>&emsp;</p>\n<h4 id=\"四、-Unicode编码\"><font color=\"#FF6347\" face=\"Comic sans MS\"> 四、 Unicode编码</font><a href=\"post/Java-Language-2-1#四、-Unicode编码\"></a></h4><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#EEE0E5\"><font face=\"Comic sans MS\"><strong>📒Unicode编码：</strong><br>1. Java的字符使用Unicode编码，使用两个字节(16位)，所以它几乎包括所有字符，中文、日文、…，它支持世<br>   界上所有语言。<br>2. 大多数语言使用ASCII码，用8位表示一个字符。ASCII码是Unicode码的一个子集，Unicode表示ASCII<br>   码时，其高位为0，它是其前255个字符。Unicode字符通常用十六进制。例如“\\u0000”-“\\u00ff”表示<br>   ASCII码集。”\\u”表示转义字符，它用来表示其后四个十六进制数字是Unicode代码。<br></font></td></tr></table></div></div> \n\n<p>&emsp;<br>&emsp;<br>&emsp;<br>&emsp;</p>\n","prev":{"title":"Java类、成员变量、static访问权限(4.1-4.4)","slug":"Java-Access-Permissions-3"},"next":{"title":"《HTTP协议请求头部的User-Agen和Cookie》","slug":"HTTP-User-Agen-Cookie"},"link":"Treecatee.gitgub.io/post/Java-Language-2-1/","copyright":{"author":"Treecatee","link":"<a href=\"Treecatee.gitgub.io/post/Java-Language-2-1/\" title=\"Java语言基础的字符常变量等(3.1-3.3)\">Treecatee.gitgub.io/post/Java-Language-2-1/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}