{"title":"Python-变量和数据类型","date":"2019-02-27T12:00:39.000Z","thumbnail":"https://i.loli.net/2019/02/27/5c76286c63008.jpg","slug":"Python-Variables-DataTypes","tags":["Python语言"],"categories":["Python"],"updated":"2019-03-05T16:42:48.388Z","content":"<p>定义一个变量就是定义了一个指针！  ٩(ˊᗜˋ*)و<br>字符串内容很多，就很烦(っ ̯ -｡)<br><a id=\"more\"></a></p>\n<p><br></p>\n<p><br></p>\n<center><font color=\"#00B2EE\" face=\"Comic sans MS\" size=\"5\"><strong>变量和数据类型</strong></font> </center>\n\n<p><br></p>\n<p><br></p>\n<h3 id=\"一-变量\"><a href=\"#一-变量\" class=\"headerlink\" title=\"一. 变量\"></a><font color=\"#FF6347\" face=\"Comic sans MS\">一. 变量</font></h3><font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>一、关于变量</strong></font>\n\n<blockquote>\n<ol>\n<li><font face=\"Comic sans MS\">变量存储在内存中的值。这就意味着在创建变量时会<strong>在内存中开辟一个空间</strong>。</font></li>\n<li><font face=\"Comic sans MS\">基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。</font></li>\n<li><font face=\"Comic sans MS\">Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。</font></li>\n<li><font face=\"Comic sans MS\">在 Python 中，变量就是变量，它没有类型，我们所说的”类型”是变量所指的内存中对象的类型。</font>\n</li>\n</ol>\n</blockquote>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>二、变量的赋值</strong></font>\n\n\n<blockquote>\n<ol>\n<li><font face=\"Comic sans MS\">Python 中的变量赋值<font color=\"#FF7F00\"><strong>不需要类型声明</strong></font>。</font></li>\n<li><font face=\"Comic sans MS\">每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。</font></li>\n<li><font face=\"Comic sans MS\">每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。</font></li>\n<li><font face=\"Comic sans MS\">变量的赋值分为：<font color=\"#FF7F00\"><strong>单个变量赋值</strong></font>和<font color=\"#FF7F00\"><strong>多个变量赋值</strong></font> </font>\n</li>\n</ol>\n</blockquote>\n<p><br></p>\n<font face=\"Comic sans MS\"><strong>单个变量赋值：</strong>使用等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。例如：</font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">message = <span class=\"string\">\"Hello Python world!\"</span></span><br><span class=\"line\">print(message)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<font face=\"Comic sans MS\">我们添加了一个名为message的<strong>变量</strong>。每个变量都存储了一个<strong>值</strong>——与变量相关联的信息。在这里，存储的值为文本“Hello Python world!”。</font>\n</blockquote>\n<p><br></p>\n<font face=\"Comic sans MS\"><strong>多个变量赋值：</strong></font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = b = c = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">#以上实例，创建一个整型对象，值为1，三个变量被分配到相同的内存空间上。</span></span><br></pre></td></tr></table></figure>\n<font face=\"Comic sans MS\">或者</font>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a, b, c = <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"string\">\"john\"</span></span><br><span class=\"line\"><span class=\"comment\">#以上实例，两个整型对象 1 和 2 分别分配给变量 a 和 b，字符串对象 \"john\" 分配给变量 c。</span></span><br></pre></td></tr></table></figure>\n<p>&emsp;</p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>三、变量的命名和使用</strong></font>\n\n\n<blockquote>\n<font color=\"#FF7F00\"><strong>请务必牢记下述有关变量的规则：</strong></font><br>1. <font face=\"Comic sans MS\">变量名只能包含<font color=\"#FF7F00\"><strong>字母、数字</strong>和<strong>下划线</strong></font>。变量名可以字母或下划线打头，但不能以数字打头，例如，可将变量命名为message_1，但不能将其命名为1_message。 </font><br>2. <font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>变量名不能包含空格</strong></font>，但可使用下划线来分隔其中的单词。例如，变量名greeting_message可行，但变量名greeting message会引发错误。</font><br>3. <font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>不要将Python关键字和函数名用作变量名</strong></font>，即不要使用Python保留用于特殊用途的单词，如print。</font><br>4. <font face=\"Comic sans MS\">变量名应既简短又具有描述性。例如，name比n好，student_name比s_n好，name_length比length_of_persons_name好。</font><br>5. <font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>慎用小写字母l和大写字母O</strong></font>，因为它们可能被人错看成数字1和0。</font><br>6. <font face=\"Comic sans MS\">注意：就目前而言，<font color=\"#FF7F00\"><strong>应使用小写的Python变量名</strong></font>。在变量名中使用大写字母虽然不会导致错误，但避免使用大写字母是个不错的主意。</font>\n</blockquote>\n<p>&emsp;</p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>四、变量是一种动态语言</strong></font><br>&emsp;<br>代码示例：<br><font color=\"#00B2EE\"></font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\">a = <span class=\"number\">123</span> <span class=\"comment\"># a是整数</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a = <span class=\"string\">'ABC'</span> <span class=\"comment\"># a变为字符串</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\"><span class=\"number\">123</span> </span><br><span class=\"line\">ABC</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&amp;emsp;</span><br><span class=\"line\">&lt;font face=\"Comic sans MS\"&gt;这种变量本身类型不固定的语言称之为&lt;font color=\"red\"&gt;**动态语言**&lt;/font&gt;，与之对应的是&lt;font color=\"red\"&gt;**静态语言**&lt;/font&gt;。和静态语言相比，**动态语言更灵活**，就是这个原因。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下（// 表示注释）：&lt;/font&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">```java</span><br><span class=\"line\">int a = <span class=\"number\">123</span>; // a是整数类型变量</span><br><span class=\"line\">a = <span class=\"string\">\"ABC\"</span>; // 错误：不能把字符串赋给整型变量</span><br></pre></td></tr></table></figure>\n<p>&emsp;</p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>五、Python的变量是Python的指针</strong></font> \n\n<p>可参考：<font color=\"#00B2EE\">[<a href=\"https://www.cnblogs.com/hzwsj/p/5777973.html\" target=\"_blank\" rel=\"noopener\">一切都是对象，一切都是指针，一切都是东西（python的编程哲学）</a>]</font><br>&emsp;<br>如下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">5</span></span><br><span class=\"line\">a=<span class=\"number\">5</span></span><br><span class=\"line\">print(id(a))</span><br><span class=\"line\">print(id(<span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">运行输出：</span><br><span class=\"line\"><span class=\"number\">1769134320</span> </span><br><span class=\"line\"><span class=\"number\">1769134320</span></span><br></pre></td></tr></table></figure>\n<p>&emsp;</p>\n<font face=\"Comic sans MS\">我们分别查一下他们的内存地址，发现地址是一样的。</font>\n\n<blockquote>\n<font face=\"Comic sans MS\"><strong>于是我们可以这样理解：</strong></font><br>1. <font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>python把一切数据，一切的一切都看作对象，在python中，没有变量，只有指针，要说变量，也是指针变量</strong></font>。</font><br>2. <font face=\"Comic sans MS\">这样的变量还有如：<strong>列表</strong>，<strong>字典的值</strong>。</font><br>3. <font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>但是字符串，数字等类型的变量，字典的键就是传值使用，不是指针，而是不可再改变的值</strong></font>。</font>\n</blockquote>\n<p>&emsp;<br><strong>举例子</strong></p>\n<font color=\"#00B2EE\">例子1：</font>当我们写：<br><font color=\"#00B2EE\"></font>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">'ABC'</span></span><br></pre></td></tr></table></figure>\n<font face=\"Comic sans MS\">时，Python解释器干了两件事情：</font>\n\n<blockquote>\n<ol>\n<li><font face=\"Comic sans MS\">在内存中创建了一个’ABC’的字符串；</font></li>\n<li><font face=\"Comic sans MS\">在内存中创建了一个名为a的变量，<strong>并把它指向’ABC’</strong></font>\n</li>\n</ol>\n</blockquote>\n<p>&emsp;</p>\n<font color=\"#00B2EE\">例子2：</font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\">a = <span class=\"string\">'ABC'</span></span><br><span class=\"line\">b = a</span><br><span class=\"line\">a = <span class=\"string\">'XYZ'</span></span><br><span class=\"line\">print(b)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">ABC</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<font face=\"Comic sans MS\">最后一行打印出变量b的内容到底是<strong><code>&#39;ABC&#39;</code></strong>呢还是<strong><code>&#39;XYZ&#39;</code></strong>？如果从数学意义上理解，就会错误地得出<strong><code>b</code></strong>和<strong><code>a</code></strong>相同，也应该是<strong><code>&#39;XYZ&#39;</code></strong>，但实际上<strong><code>b</code></strong>的值是<strong><code>&#39;ABC&#39;</code></strong>，让我们一行一行地执行代码，就可以看到到底发生了什么事：</font><br>1. <font face=\"Comic sans MS\">执行a = ‘ABC’，解释器创建了字符串’ABC’和变量a，<strong>并把a指向’ABC’</strong>：</font>\n\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/02/27/5c760234f3b42.png\" alt=\"1.png\"></p></div>\n<ol start=\"2\">\n<li><font face=\"Comic sans MS\">执行b = a，解释器创建了变量b，并把b指向a指向的字符串’ABC’：</font>\n\n</li>\n</ol>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/02/27/5c7602fa3c6f7.png\" alt=\"0 (1).png\"></p></div>\n<ol start=\"3\">\n<li><font face=\"Comic sans MS\">执行a = ‘XYZ’，解释器创建了字符串’XYZ’，并把a的指向改为’XYZ’，但b并没有更改：</font>\n\n</li>\n</ol>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/02/27/5c7603411d5fc.png\" alt=\"0 (2).png\"></p></div>\n<font face=\"Comic sans MS\">所以，最后打印变量b的结果自然是’ABC’了。</font>\n\n\n<p><br><br>&emsp;</p>\n<h3 id=\"二-常量\"><a href=\"#二-常量\" class=\"headerlink\" title=\"二. 常量\"></a><font color=\"#FF6347\" face=\"Comic sans MS\">二. 常量</font></h3><font face=\"Comic sans MS\">所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，<strong>通常用全部大写的变量名表示常量</strong>：</font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PI = <span class=\"number\">3.14159265359</span></span><br></pre></td></tr></table></figure>\n<font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变</strong></font>，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。</font>\n\n\n<font color=\"#FF7F00\"></font>\n\n<h3 id=\"三-数据类型\"><a href=\"#三-数据类型\" class=\"headerlink\" title=\"三. 数据类型\"></a><font color=\"#FF6347\" face=\"Comic sans MS\">三. 数据类型</font></h3><font face=\"Comic sans MS\"><strong>标准数据类型</strong><br><br>在内存中存储的数据可以有多种类型。<br><br>Python 定义了一些标准类型，用于存储各种类型的数据。</font>\n\n\n<blockquote>\n<font face=\"Comic sans MS\">Python<font color=\"#FF7F00\"><strong>有五个标准</strong></font>的数据类型：</font><br>1. <font face=\"Microsoft YaHei\">Numbers（数字）</font><br>2. <font face=\"Microsoft YaHei\">String（字符串）</font><br>3. <font face=\"Sans-serif\">List（列表）</font><br>4. <font face=\"Sans-serif\">Tuple（元组）</font><br>5. <font face=\"Sans-serif\">Dictionary（字典）</font>\n</blockquote>\n<h4 id=\"3-1-数字运算和函数\"><a href=\"#3-1-数字运算和函数\" class=\"headerlink\" title=\"3.1 数字运算和函数\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">3.1 数字运算和函数</font></h4><font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>一、整数的定义和基础知识</strong></font> \n\n<ol>\n<li><font face=\"Comic sans MS\"><font color=\"#FF7F00\"><strong>Python可以处理任意大小的整数，当然包括负整数</strong></font>，在程序中的表示方法和数学上的写法一模一样，例如：1，100，-8080，0，等等。</font>\n</li>\n<li><font face=\"Comic sans MS\">计算机由于使用二进制，所以，有时候用<font color=\"#FF7F00\"><strong>十六进制表示整数</strong></font>比较方便，十六进制用0x前缀和0-9，a-f表示，例如：0xff00，0xa5b4c3d2，等等。</font>\n\n</li>\n</ol>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>二、整数运算</strong></font> \n\n<font face=\"Comic sans MS\">在Python中，可对整数执行加（<strong><code>+</code></strong>）减（<strong><code>-</code></strong>）乘（<strong><code>*</code></strong>）除（<strong><code>/</code></strong>）平方（<code>**</code>）取余（<code>%</code>）运算。</font>\n\n<p><br></p>\n<font face=\"Comic sans MS\"><font color=\"red\"><strong>注意事项：</strong></font> </font>\n\n<blockquote>\n<ol>\n<li><font face=\"Comic sans MS\">Python使用<font color=\"#FF7F00\"><strong>两个乘号表示乘方运算：</strong></font><code>3 ** 2==9</code></font></li>\n<li><font face=\"Comic sans MS\">Python<font color=\"#FF7F00\"><strong>整数的除法得到的结果是精确的</strong></font>。在Python中，有两种除法：</font><br> 1. <font face=\"Comic sans MS\">一种除法是<code>/</code>(结果是浮点数)</font><br> 2. <font face=\"Comic sans MS\">另一种是除法是<code>//</code>，称为地板除(两个整数的除法仍然是整数) </font>  </li>\n<li><font face=\"Comic sans MS\">因为<strong><code>//</code></strong>除法只取结果的整数部分，所以Python还提供一个余数运算(<code>%</code>)，可以得到两个整数相除的余数。</font>\n</li>\n</ol>\n</blockquote>\n<p>&emsp;<br>示例代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">10</span>/<span class=\"number\">3</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a=<span class=\"number\">10</span>//<span class=\"number\">3</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">a=<span class=\"number\">10</span>%<span class=\"number\">3</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">运算结果：</span><br><span class=\"line\"><span class=\"number\">3.3333333333333335</span> </span><br><span class=\"line\"><span class=\"number\">3</span> </span><br><span class=\"line\"><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>三、Number 类型转换</strong></font> \n\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n\n<tbody>\n<tr>\n<td style=\"text-align:left\">int(x [,base ])</td>\n<td style=\"text-align:left\">将x转换为一个整数  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">long(x [,base ])</td>\n<td style=\"text-align:left\">将x转换为一个长整数  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">float(x )</td>\n<td style=\"text-align:left\">将x转换到一个浮点数  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">complex(real [,imag ])</td>\n<td style=\"text-align:left\">创建一个复数  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">str(x )</td>\n<td style=\"text-align:left\">将对象 x 转换为字符串  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">repr(x )</td>\n<td style=\"text-align:left\">将对象 x 转换为表达式字符串  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">eval(str )</td>\n<td style=\"text-align:left\">用来计算在字符串中的有效Python表达式,并返回一个对象  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tuple(s )</td>\n<td style=\"text-align:left\">将序列 s 转换为一个元组  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">list(s )</td>\n<td style=\"text-align:left\">将序列 s 转换为一个列表  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">chr(x )</td>\n<td style=\"text-align:left\">将一个整数转换为一个字符  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">unichr(x )</td>\n<td style=\"text-align:left\">将一个整数转换为Unicode字符  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ord(x )</td>\n<td style=\"text-align:left\">将一个字符转换为它的整数值  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">hex(x )</td>\n<td style=\"text-align:left\">将一个整数转换为一个十六进制字符串  </td>\n</tr>\n<tr>\n<td style=\"text-align:left\">oct(x )</td>\n<td style=\"text-align:left\">将一个整数转换为一个八进制字符串  </td>\n</tr>\n</tbody>\n</table></div></div>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>四、数学函数</strong></font> \n\n\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">返回值 ( 描述 )</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">abs(x)</td>\n<td style=\"text-align:left\">返回数字的绝对值，如abs(-10) 返回 10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ceil(x)</td>\n<td style=\"text-align:left\">返回数字的上入整数，如math.ceil(4.1) 返回 5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cmp(x, y)</td>\n<td style=\"text-align:left\">如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">exp(x)</td>\n<td style=\"text-align:left\">返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fabs(x)</td>\n<td style=\"text-align:left\">返回数字的绝对值，如math.fabs(-10) 返回10.0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">floor(x)</td>\n<td style=\"text-align:left\">返回数字的下舍整数，如math.floor(4.9)返回 4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">log(x)</td>\n<td style=\"text-align:left\">如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">log10(x)</td>\n<td style=\"text-align:left\">返回以10为基数的x的对数，如math.log10(100)返回 2.0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">max(x1, x2,…)</td>\n<td style=\"text-align:left\">返回给定参数的最大值，参数可以为序列。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">min(x1, x2,…)</td>\n<td style=\"text-align:left\">返回给定参数的最小值，参数可以为序列。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">modf(x)</td>\n<td style=\"text-align:left\">返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pow(x, y)</td>\n<td style=\"text-align:left\">x**y 运算后的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">round(x [,n])</td>\n<td style=\"text-align:left\">返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sqrt(x)</td>\n<td style=\"text-align:left\">返回数字x的平方根</td>\n</tr>\n</tbody>\n</table></div></div>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>五、随机数函数</strong></font> \n\n<font face=\"Comic sans MS\">随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。</font>\n\n<p>Python包含以下常用随机数函数：</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">choice(seq)</td>\n<td style=\"text-align:left\">从序列的元素中随机挑选一个元素，比如random.choice(range(10))，<br>从0到9中随机挑选一个整数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">randrange</td>\n<td style=\"text-align:left\">([start,] stop [,step])    从指定范围内，按指定基数递增的集合中获取一个随机数，<br>基数缺省值为1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">random()</td>\n<td style=\"text-align:left\">随机生成下一个实数，它在[0,1)范围内。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">seed([x])</td>\n<td style=\"text-align:left\">改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，<br>Python会帮你选择seed。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shuffle(lst)</td>\n<td style=\"text-align:left\">将序列的所有元素随机排序</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">uniform(x, y)</td>\n<td style=\"text-align:left\">随机生成下一个实数，它在[x,y]范围内。</td>\n</tr>\n</tbody>\n</table></div></div>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>六、三角函数</strong></font> \n\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">acos(x)</td>\n<td style=\"text-align:left\">返回x的反余弦弧度值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">asin(x)</td>\n<td style=\"text-align:left\">返回x的反正弦弧度值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">atan(x)</td>\n<td style=\"text-align:left\">返回x的反正切弧度值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">atan2(y, x)</td>\n<td style=\"text-align:left\">返回给定的 X 及 Y 坐标值的反正切值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cos(x)</td>\n<td style=\"text-align:left\">返回x的弧度的余弦值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">hypot(x, y)</td>\n<td style=\"text-align:left\">返回欧几里德范数 sqrt(x<em>x + y</em>y)。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sin(x)</td>\n<td style=\"text-align:left\">返回的x弧度的正弦值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tan(x)</td>\n<td style=\"text-align:left\">返回x弧度的正切值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">degrees(x)</td>\n<td style=\"text-align:left\">将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">radians(x)</td>\n<td style=\"text-align:left\">将角度转换为弧度</td>\n</tr>\n</tbody>\n</table></div></div>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>七、数学常量</strong></font>\n\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pi</td>\n<td style=\"text-align:left\">数学常量 pi（圆周率，一般以π来表示）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">e</td>\n<td style=\"text-align:left\">数学常量 e，e即自然常数（自然常数）。 </td>\n</tr>\n</tbody>\n</table></div></div>\n<p><br></p>\n<font color=\"#00B2EE\" face=\"Comic sans MS\"><strong>八、 range()函数</strong><br></font>\n\n\n<font face=\"Comic sans MS\">Python3 range() 函数返回的是一个可迭代对象（类型是对象），而不是列表类型， 所以打印的时候不会打印列表。<br></font>\n\n\n<font face=\"Comic sans MS\">Python3 list() 函数是对象迭代器，可以把range()返回的可迭代对象转为一个列表，返回的变量类型为列表。<br></font>\n\n\n<font face=\"Comic sans MS\">Python2 range() 函数返回的是列表。<br></font>\n\n\n<font face=\"Comic sans MS\"><font color=\"#00B2EE\">[<a href=\"http://www.runoob.com/python3/python3-built-in-functions.html\" target=\"_blank\" rel=\"noopener\">Python3 内置函数</a>]</font></font>&emsp;<font face=\"Comic sans MS\"><font color=\"#00B2EE\">[<a href=\"http://www.runoob.com/python3/python3-func-range.html\" target=\"_blank\" rel=\"noopener\">Python3 range() 函数用法</a>]</font><br></font>\n\n\n\n<p><br></p>\n<p><strong>函数语法：</strong></p>\n<font color=\"#FF7F00\"><strong>range(stop)</strong></font><br><font color=\"#FF7F00\"><strong>range(start, stop[, step])</strong></font>\n\n<p><br></p>\n<blockquote>\n<p><strong>参数说明：</strong></p>\n<font face=\"Microsoft YaHei\"><font color=\"#FF7F00\"><strong>start:</strong></font> 计数从 start开始。默认是从 0 开始。例如range（5）等价于range（0， 5）;</font><br><font face=\"Microsoft YaHei\"><font color=\"#FF7F00\"><strong>stop:</strong></font> 计数到 stop 结束，但不包括 stop。例如：range（0， 5） 是[0, 1, 2, 3, 4]没有5</font><br><font face=\"Microsoft YaHei\"><font color=\"#FF7F00\"><strong>step：</strong></font>步长，默认为1。例如：range（0， 5） 等价于 range(0, 5, 1)</font>\n</blockquote>\n<p><br></p>\n<p><br></p>\n<h4 id=\"3-2-浮点数\"><a href=\"#3-2-浮点数\" class=\"headerlink\" title=\"3.2 浮点数\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">3.2 浮点数</font></h4><ol>\n<li><font face=\"Comic sans MS\">浮点数也就是小数，之所以称为浮点数，<strong>是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的</strong>，比如，1.23x10^9和12.3x10^8是完全相等的。浮点数可以用数学写法，如<strong><code>1.23</code></strong>，<strong><code>3.14</code></strong>，<strong><code>-9.01</code></strong>，等等。但是对于很大或很小的浮点数，就必须用科学计数法表示，<strong>把10用e替代</strong>，1.23x109就是<strong><code>1.23e9</code></strong>，或者<strong><code>12.3e8</code></strong>，0.000012可以写成<strong><code>1.2e-5</code></strong>，等等。</font>\n</li>\n<li><font face=\"Comic sans MS\">整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的（除法难道也是精确的？是的！），而浮点数运算则可能会有四舍五入的误差。</font>\n\n\n\n</li>\n</ol>\n<p><br></p>\n<h4 id=\"3-3-字符串\"><a href=\"#3-3-字符串\" class=\"headerlink\" title=\"3.3 字符串\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">3.3 字符串</font></h4><h5 id=\"1-定义字符串并输出\"><a href=\"#1-定义字符串并输出\" class=\"headerlink\" title=\"1.定义字符串并输出\"></a><font color=\"#00B2EE\" face=\"Comic sans MS\">1.定义字符串并输出</font></h5><ol>\n<li><font face=\"Comic sans MS\"><font color=\"red\" face=\"Comic sans MS\"><strong>区分单引号和双引号：</strong></font>字符串是以单引号<strong><code>&#39;</code></strong>或双引号<strong><code>&quot;</code></strong>括起来的任意文本，比如<strong><code>&#39;abc&#39;</code></strong>，<strong><code>&quot;xyz&quot;</code></strong>等等。</font><br><font face=\"Comic sans MS\"><strong>请注意</strong>：<strong><code>&#39;&#39;</code></strong>或<strong><code>&quot;&quot;</code></strong>本身只是一种表示方式，不是字符串的一部分，因此，字符串<strong><code>&#39;abc&#39;</code></strong>只有<strong><code>a</code></strong>，<strong><code>b</code></strong>，<strong><code>c</code></strong>这3个字符。如果<code>&#39;</code>本身也是一个字符，那就可以用<code>&quot;&quot;</code>括起来，比如<code>&quot;I&#39;m OK&quot;</code>包含的字符是<strong><code>I</code></strong>，<strong><code>&#39;</code></strong>，<strong><code>m</code></strong>，<strong><code>空格</code></strong>，<strong><code>O</code></strong>，<strong><code>K</code></strong>这6个字符。<br>即<font color=\"#FF7F00\"><strong>单引号要放到双引号里面，双引号要放到单引号里面</strong></font>。</font>\n\n</li>\n</ol>\n<p><br></p>\n<ol start=\"2\">\n<li><font color=\"red\" face=\"Comic sans MS\"><strong>使用转义字符“<code>\\</code>”</strong></font> ： <font face=\"Microsoft YaHei\">如果字符串内部既包含<strong><code>&#39;</code></strong>又包含<strong><code>&quot;</code></strong>怎么办？可以用转义字符<strong><code>\\</code></strong>来标识，比如：</font>\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">'I\\'m \\\"OK\\\"!'</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">运行输出：</span><br><span class=\"line\">I<span class=\"string\">'m \"OK\"!</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<font face=\"Microsoft YaHei\">把双引号括在单引号里面，但是下面的单引号必须转义，如下也是正确的：</font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">'I\\'m \"OK\"!'</span></span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ol start=\"3\">\n<li><font color=\"red\" face=\"Comic sans MS\"><strong>使用不转义字符“<code>r&#39;&#39;</code>”</strong></font>： <font face=\"Microsoft YaHei\">如果字符串里面有很多字符都需要转义，就需要加很多<strong><code>\\</code></strong>，为了简化，Python还允许用<code>r&#39;&#39;</code>表示，<font color=\"#FF7F00\"><strong><code>&#39;&#39;</code>内部的字符串默认不转义</strong></font>，可以自己试试：</font>\n\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">'\\\\\\t\\\\'</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a=<span class=\"string\">r'\\\\\\t\\\\'</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">输出结果：</span><br><span class=\"line\">\\\t\\ </span><br><span class=\"line\">\\\\\\t\\\\</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ol start=\"4\">\n<li><font color=\"red\" face=\"Comic sans MS\"><strong>在字符串里面有换行，将字符串按照换行输出。使用</strong><code>&#39;&#39;&#39;  内容  &#39;&#39;&#39;</code><strong>：</strong></font><font face=\"Microsoft YaHei\">如果字符串内部有很多换行，用<strong><code>\\n</code></strong>写在一行里不好阅读，为了简化，Python允许用<strong><code>&#39;&#39;&#39; 这里写内容&#39;&#39;&#39;</code></strong>的格式表示多行内容，可以自己试试：</font>\n\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">'''hello</span></span><br><span class=\"line\"><span class=\"string\">world</span></span><br><span class=\"line\"><span class=\"string\">line1</span></span><br><span class=\"line\"><span class=\"string\">line2'''</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">运行输出：</span><br><span class=\"line\">hello </span><br><span class=\"line\">world </span><br><span class=\"line\">line1 </span><br><span class=\"line\">line2</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ol start=\"5\">\n<li><font color=\"red\" face=\"Comic sans MS\"><strong>在字符串里面有换行，将字符串按照换行输出，并且不转义输出字符。使用<code>r&#39;&#39;&#39;  &#39;&#39;&#39;</code>：</strong></font>\n\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">r'''hello \\n</span></span><br><span class=\"line\"><span class=\"string\">world</span></span><br><span class=\"line\"><span class=\"string\">line1</span></span><br><span class=\"line\"><span class=\"string\">line2'''</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">运行输出：</span><br><span class=\"line\">hello \\n </span><br><span class=\"line\">world </span><br><span class=\"line\">line1 </span><br><span class=\"line\">line2</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h5 id=\"2-使用字符串-取下标\"><a href=\"#2-使用字符串-取下标\" class=\"headerlink\" title=\"2.使用字符串(取下标)\"></a><font color=\"#00B2EE\" face=\"Comic sans MS\">2.使用字符串(取下标)</font></h5><blockquote>\n<font face=\"Microsoft YaHei\"><font color=\"#FF7F00\"><strong>python的字串列表有2种取值顺序:</strong></font></font><br>1. <font face=\"Microsoft YaHei\">从左到右索引默认<font color=\"#FF7F00\"><strong>0</strong></font>开始的，最大范围是字符串<strong>长度少1</strong>；</font><br>2. <font face=\"Microsoft YaHei\">从右到左索引默认-1开始的，最大范围是字符串开头。</font>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/02/27/5c7665042686e.png\" alt=\"python-string-slice.png\"></p></div>\n<blockquote>\n<ol start=\"3\">\n<li><font face=\"Microsoft YaHei\">如果你要实现从字符串中获取一段<strong>子字符串</strong>的话，可以使用 <font color=\"#FF7F00\"><strong>[头下标:尾下标]</strong></font> 来截取相应的字符串，其中下标是从 0 开始算起，可以是正数或负数，下标可以为空表示取到头或尾。</font></li>\n<li><font face=\"Microsoft YaHei\"><strong><code>[头下标:尾下标]</code></strong> 获取的子字符串包含头下标的字符，但<strong>不包含尾下标的字符</strong>。</font>\n</li>\n</ol>\n</blockquote>\n<p><br></p>\n<p>比如:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">'abcdef'</span></span><br><span class=\"line\">print(s[<span class=\"number\">2</span>])</span><br><span class=\"line\">print(s[<span class=\"number\">1</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">c </span><br><span class=\"line\">bcde</span><br></pre></td></tr></table></figure>\n<blockquote>\n<font face=\"Microsoft YaHei\">当使用以冒号<strong><code>:</code></strong>分隔的字符串，python 返回一个新的对象，结果包含了以这对偏移标识的连续的内容，左边的开始是包含了下边界。<br>上面的结果包含了 s[1] 的值 b，而取到的最大范围不包括尾下标，就是 s[5] 的值 f。</font>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/02/27/5c76663ee5909.png\" alt=\"9aU.png\"></p></div>\n<p><br></p>\n<h5 id=\"3-加号-星号-冒号\"><a href=\"#3-加号-星号-冒号\" class=\"headerlink\" title=\"3.加号(+)星号(*)冒号(:)\"></a><font color=\"#00B2EE\" face=\"Comic sans MS\">3.加号(+)星号(*)冒号(:)</font></h5><blockquote>\n<ol>\n<li><font color=\"#FF7F00\"><strong>加号(+)：</strong></font><strong>拼接字符串；</strong></li>\n<li><font color=\"#FF7F00\"><strong>星号(*)：</strong></font><strong>重复操作；</strong></li>\n<li><font color=\"#FF7F00\"><strong>冒号(:)：</strong></font><strong>截取字符。</strong></li>\n</ol>\n</blockquote>\n<p><br></p>\n<ol>\n<li><font color=\"red\"><strong>Python使用加号（ + ）来合并字符串</strong></font>\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">first_name = <span class=\"string\">\"ada\"</span></span><br><span class=\"line\">last_name = <span class=\"string\">\"lovelace\"</span></span><br><span class=\"line\">full_name = first_name + <span class=\"string\">\" \"</span> + last_name</span><br><span class=\"line\">print(<span class=\"string\">\"Hello, \"</span> + full_name + <span class=\"string\">\"!\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">Hello, ada lovelace!</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ol start=\"2\">\n<li><font color=\"red\"><strong>Python使用星号（ * ）来重复字符串</strong></font>\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = <span class=\"string\">'Hello World!'</span></span><br><span class=\"line\">a=str*<span class=\"number\">2</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">运行输出：</span><br><span class=\"line\">Hello World!Hello World!</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ol start=\"3\">\n<li><font color=\"red\"><strong>Python使用冒号（ ： ）来截取字符</strong></font>\n\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/python</span><br><span class=\"line\"># -*- coding: UTF-8 -*-</span><br><span class=\"line\"> </span><br><span class=\"line\">str = <span class=\"string\">'Hello World!'</span></span><br><span class=\"line\"> </span><br><span class=\"line\">print str           # 输出完整字符串</span><br><span class=\"line\">print str[0]        # 输出字符串中的第一个字符</span><br><span class=\"line\">print str[2:5]      # 输出字符串中第三个至第五个之间的字符串</span><br><span class=\"line\">print str[2:]       # 输出从第三个字符开始的字符串</span><br><span class=\"line\">print str * 2       # 输出字符串两次</span><br><span class=\"line\">print str + \"TEST\"  # 输出连接的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">以上实例输出结果：</span><br><span class=\"line\">Hello World!</span><br><span class=\"line\">H</span><br><span class=\"line\">llo</span><br><span class=\"line\">llo World!</span><br><span class=\"line\">Hello World!Hello World!</span><br><span class=\"line\">Hello World!TEST</span><br></pre></td></tr></table></figure>\n<blockquote>\n<font face=\"Microsoft YaHei\">Python 列表截取可以接收第三个参数，<font color=\"#FF7F00\"><strong>参数作用是截取的步长，以下实例在索引 1 到索引 4 的位置并设置为步长为 2（间隔一个位置）来截取字符串：</strong></font></font>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/02/27/5c766ace2223e.png\" alt=\"python_list_slice_2.png\"></p></div>\n<p><br></p>\n<h5 id=\"4-常用的字符串方法\"><a href=\"#4-常用的字符串方法\" class=\"headerlink\" title=\"4.常用的字符串方法\"></a><font color=\"#00B2EE\" face=\"Comic sans MS\">4.常用的字符串方法</font></h5><h6 id=\"1-修改字符串的大小写\"><a href=\"#1-修改字符串的大小写\" class=\"headerlink\" title=\"1. 修改字符串的大小写\"></a><font color=\"#20B2AA\" face=\"Comic sans MS\">1. 修改字符串的大小写</font></h6><blockquote>\n<p><font color=\"#FF7F00\"><strong>使用方法：</strong></font></p>\n<ol>\n<li><strong>upper()</strong>：将字符串<font color=\"#FF7F00\"><strong>所有字母大写</strong></font>；</li>\n<li><strong>lower()</strong>：将字符串<font color=\"#FF7F00\"><strong>所有字母小写</strong></font>；</li>\n<li><strong>title()</strong>：将字符串<font color=\"#FF7F00\"><strong>所有单词首字母大写，并将单词中除了首字母的变为小写</strong></font>。</li>\n</ol>\n</blockquote>\n<p><br></p>\n<p>示例代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">\"Hexo lovelace giTHub toMMrow n\"</span></span><br><span class=\"line\">print(name.upper())</span><br><span class=\"line\">print(name.lower())</span><br><span class=\"line\">print(name.title())</span><br><span class=\"line\"></span><br><span class=\"line\">运行输出：</span><br><span class=\"line\">HEXO LOVELACE GITHUB TOMMROW N </span><br><span class=\"line\">hexo lovelace github tommrow n </span><br><span class=\"line\">Hexo Lovelace Github Tommrow N</span><br></pre></td></tr></table></figure>\n<font face=\"Microsoft YaHei\">在<strong><code>name.title()</code></strong> 中，name 后面的句点（ <strong><code>.</code></strong> ）让Python对变量name 执行方法title() 指定的操作。每个方法后面都跟着一对括号，这是因为方法通常需要<font color=\"#FF7F00\"><strong>额外的信息来完成其工作</strong></font>。这种信息是在括号内提供的。函数title() 不需要额外的信息，因此它后面的括号是空的。</font>\n\n\n<p><br></p>\n<h6 id=\"2-暂时-永久删除字符串两端空白\"><a href=\"#2-暂时-永久删除字符串两端空白\" class=\"headerlink\" title=\"2. 暂时/永久删除字符串两端空白\"></a><font color=\"#20B2AA\" face=\"Comic sans MS\">2. 暂时/永久删除字符串两端空白</font></h6><blockquote>\n<font color=\"#FF7F00\"><strong>使用方法：</strong></font><br>1. <font face=\"Microsoft YaHei\"><strong>strip()：</strong>删除字符串<font color=\"#FF7F00\"><strong>两端</strong></font>空白或换行符；</font><br>2. <font face=\"Microsoft YaHei\"><strong>lstrip()：</strong>删除字符串<font color=\"#FF7F00\"><strong>左</strong></font>端空白或换行符；</font><br>3. <font face=\"Microsoft YaHei\"><strong>rstrip()：</strong>删除字符串<font color=\"#FF7F00\"><strong>右</strong></font>端空白或换行符；</font>\n</blockquote>\n<p><br></p>\n<blockquote>\n<font face=\"Microsoft YaHei\"><font color=\"#FF7F00\"><strong>暂时</strong></font>或者是<font color=\"#FF7F00\"><strong>永久</strong></font>删除的区别是在于调用方法后是否重新赋值给一个变量：</font><br>1. <font face=\"Microsoft YaHei\"><strong>不赋值：</strong><font color=\"#FF7F00\">暂时删除，下次调用时还是原字符串</font>；</font><br>2. <font face=\"Microsoft YaHei\"><strong>重新赋值：</strong><font color=\"#FF7F00\">永久删除</font>。</font>\n</blockquote>\n<p><br></p>\n<p>示例代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">\"    HexoAndGithub  \"</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(name)</span><br><span class=\"line\">print(name.strip())</span><br><span class=\"line\">print(name.rstrip())</span><br><span class=\"line\">print(name.lstrip())</span><br><span class=\"line\">print(name)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">name = name.strip()</span><br><span class=\"line\">print(name)</span><br><span class=\"line\">print(name.strip())</span><br><span class=\"line\">print(name.rstrip())</span><br><span class=\"line\">print(name.lstrip())</span><br><span class=\"line\">print(name)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">    HexoAndGithub   </span><br><span class=\"line\">HexoAndGithub </span><br><span class=\"line\">    HexoAndGithub </span><br><span class=\"line\">HexoAndGithub   </span><br><span class=\"line\">    HexoAndGithub   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HexoAndGithub </span><br><span class=\"line\">HexoAndGithub </span><br><span class=\"line\">HexoAndGithub </span><br><span class=\"line\">HexoAndGithub </span><br><span class=\"line\">HexoAndGithub</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h6 id=\"3-内置函数-len-返回字符串长度\"><a href=\"#3-内置函数-len-返回字符串长度\" class=\"headerlink\" title=\"3. 内置函数 len()返回字符串长度\"></a><font color=\"#20B2AA\" face=\"Comic sans MS\">3. 内置函数 len()返回字符串长度</font></h6><font face=\"Microsoft YaHei\">内置函数 len() 返回字符串长度，注意，它<strong>并不是字符串的方法！！！</strong></font>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">'supercalifragilisticexpialidocious'</span></span><br><span class=\"line\">b = len(a)</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\">supercalifragilisticexpialidocious </span><br><span class=\"line\"><span class=\"number\">34</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h4 id=\"3-4-布尔值\"><a href=\"#3-4-布尔值\" class=\"headerlink\" title=\"3.4 布尔值\"></a><font color=\"#3CB371\" face=\"Comic sans MS\">3.4 布尔值</font></h4><ol>\n<li><font face=\"Microsoft YaHei\">布尔值和布尔代数的表示完全一致，一个布尔值只有<strong><code>True</code></strong>、<strong><code>False</code></strong>两种值，要么是True，要么是False；</font>\n</li>\n<li><font face=\"Microsoft YaHei\">在Python中，True、False<font color=\"#FF7F00\"><strong>首字母必须大写</strong></font>。可以直接用True、False表示布尔值，请注意大小写，也可以通过布尔运算计算出来：</font>\n\n\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"literal\">True</span></span><br><span class=\"line\">b=<span class=\"number\">3</span>&gt;<span class=\"number\">2</span></span><br><span class=\"line\">print(a,b)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\"><span class=\"literal\">True</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ol start=\"3\">\n<li><font face=\"Microsoft YaHei\"><strong>布尔值可以用<code>and</code>、<code>or</code>和<code>not</code>运算</strong></font><ol>\n<li><font face=\"Microsoft YaHei\"><strong><code>and</code></strong>运算是<strong>与运算</strong>，只有<font color=\"#FF7F00\"><strong>所有都为True，and运算结果才是True</strong></font> </font></li>\n<li><font face=\"Microsoft YaHei\"><strong><code>or</code></strong>运算是<strong>或运算</strong>，只要<font color=\"#FF7F00\"><strong>其中有一个为True，or运算结果就是True</strong></font> </font></li>\n<li><font face=\"Microsoft YaHei\"><strong><code>not</code></strong>运算是<strong>非运算</strong>，它是一个单目运算符，<font color=\"#FF7F00\"><strong>把True变成False，False变成True</strong></font> </font>s</li>\n</ol>\n</li>\n</ol>\n<p><br></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a= <span class=\"number\">5</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"number\">3</span> &lt; <span class=\"number\">1</span></span><br><span class=\"line\">b= <span class=\"number\">5</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">or</span> <span class=\"number\">1</span> &gt; <span class=\"number\">3</span></span><br><span class=\"line\">c= <span class=\"keyword\">not</span> <span class=\"number\">1</span> &gt; <span class=\"number\">2</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(c)</span><br><span class=\"line\"></span><br><span class=\"line\">运行结果：</span><br><span class=\"line\"><span class=\"literal\">False</span> </span><br><span class=\"line\"><span class=\"literal\">True</span> </span><br><span class=\"line\"><span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>","prev":{"title":"Python-字符编码&字符串&格式化","slug":"Python-Coding"},"next":{"title":"Python-基础语法","slug":"Python-Grammar"},"link":"Treecatee.gitgub.io/post/Python-Variables-DataTypes/","toc":[{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">一. 变量</font>","id":"一-变量","index":"1"},{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">二. 常量</font>","id":"二-常量","index":"2"},{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">三. 数据类型</font>","id":"三-数据类型","index":"3","children":[{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">3.1 数字运算和函数</font>","id":"3-1-数字运算和函数","index":"3.1"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">3.2 浮点数</font>","id":"3-2-浮点数","index":"3.2"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">3.3 字符串</font>","id":"3-3-字符串","index":"3.3","children":[{"title":"<font color=\"#00B2EE\" face=\"Comic sans MS\">1.定义字符串并输出</font>","id":"1-定义字符串并输出","index":"3.3.1"},{"title":"<font color=\"#00B2EE\" face=\"Comic sans MS\">2.使用字符串(取下标)</font>","id":"2-使用字符串-取下标","index":"3.3.2"},{"title":"<font color=\"#00B2EE\" face=\"Comic sans MS\">3.加号(+)星号(*)冒号(:)</font>","id":"3-加号-星号-冒号","index":"3.3.3"},{"title":"<font color=\"#00B2EE\" face=\"Comic sans MS\">4.常用的字符串方法</font>","id":"4-常用的字符串方法","index":"3.3.4","children":[{"title":"<font color=\"#20B2AA\" face=\"Comic sans MS\">1. 修改字符串的大小写</font>","id":"1-修改字符串的大小写","index":"3.3.4.1"},{"title":"<font color=\"#20B2AA\" face=\"Comic sans MS\">2. 暂时/永久删除字符串两端空白</font>","id":"2-暂时-永久删除字符串两端空白","index":"3.3.4.2"},{"title":"<font color=\"#20B2AA\" face=\"Comic sans MS\">3. 内置函数 len()返回字符串长度</font>","id":"3-内置函数-len-返回字符串长度","index":"3.3.4.3"}]}]},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">3.4 布尔值</font>","id":"3-4-布尔值","index":"3.4"}]}],"copyright":{"author":"Treecatee","license":"不可转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"Treecatee.gitgub.io/post/Python-Variables-DataTypes/\" title=\"Python-变量和数据类型\">Treecatee.gitgub.io/post/Python-Variables-DataTypes/</a>","published":"February 27, 2019"}}